# Database Connection (Sync format - will be converted to async internally when needed)
# For local development with port-forwarding:
# kubectl port-forward -n aicallgo-staging svc/postgres-postgresql 5432:5432
DATABASE_URL_SYNC=postgresql://aicallgo_user:password@localhost:5432/aicallgo_staging

# Admin Authentication
ADMIN_USERNAME=admin
# Generate hash with: make hash-password PASSWORD='YourPassword'
# IMPORTANT: For docker-compose, escape $ with $$ (e.g., $$2b$$12$$...)
# Example: ADMIN_PASSWORD_HASH=$$2b$$12$$KIX8tWq2mZQX5V...
ADMIN_PASSWORD_HASH=$$2b$$12$$...your_bcrypt_hash_here...

# Session secret key for encrypting browser cookies
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
# This key is used to encrypt session data stored in browser cookies
SESSION_SECRET_KEY=your_random_secret_key_here

# App Configuration
APP_ENV=development
DEBUG=true
SQL_ECHO=false
SESSION_TIMEOUT_HOURS=8

# Streamlit Configuration
STREAMLIT_SERVER_PORT=8501
STREAMLIT_SERVER_ADDRESS=localhost

# Backblaze B2 Configuration (for call recording playback)
# These credentials should match the web-backend configuration
B2_APPLICATION_KEY_ID=your_b2_key_id_here
B2_APPLICATION_KEY=your_b2_application_key_here
B2_BUCKET_NAME=aicallgo
B2_REGION=us-west-004
# B2_ENDPOINT_URL is optional - automatically derived from region if not set
# Pattern: https://s3.{region}.backblazeb2.com
# Uncomment only if you need to override for testing:
# B2_ENDPOINT_URL=https://s3.us-west-004.backblazeb2.com
# Recording URL expiration time in seconds (default: 3600 = 1 hour)
RECORDING_URL_EXPIRATION_SECONDS=3600

# Kubernetes Configuration (for logs viewer)
# Path to kubeconfig file (e.g., /app/kubeconfig or ~/staging-kubeconfig.txt)
# Leave empty to use in-cluster config when deployed in K8s
KUBECONFIG_PATH=
# Kubernetes namespace to monitor (aicallgo-staging or aicallgo-production)
K8S_NAMESPACE=aicallgo-staging
# Enable/disable logs feature (set to false if K8s access not available)
K8S_LOGS_ENABLED=true

# Web Backend API Configuration (for internal API calls)
# Base URL of the web-backend service
# For local development (outside Docker): http://localhost:8000
# For Docker development: http://aicallgo_app:8000
# For production: http://aicallgo-backend:8000 (internal service name)
WEB_BACKEND_URL=http://aicallgo_app:8000
# Internal API key for service-to-service authentication
# This should match the INTERNAL_API_KEY in web-backend's .env
# Generate with: python3 -c "import secrets; print(secrets.token_urlsafe(32))"
INTERNAL_API_KEY=your_internal_api_key_here
