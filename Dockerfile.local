# ============================================================================
# Local Development Dockerfile
# ============================================================================
# This Dockerfile is optimized for local testing in the infra-repo where
# web-backend is available as a sibling directory (Git submodule).
#
# Build from infra-repo/services directory:
#   cd /path/to/aicallgo-infra-repo/services
#   docker build -f admin-board/Dockerfile.local \
#                -t aicallgo-admin:local \
#                .
#
# Or use the Makefile:
#   cd admin-board
#   make build-local
# ============================================================================

FROM python:3.12-slim

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    DEBIAN_FRONTEND=noninteractive

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    libssl-dev \
    libffi-dev \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy web-backend models from local filesystem
# Build context is services/ directory containing both admin-board/ and web-backend/
COPY web-backend/app/models ./web-backend/app/models
COPY web-backend/app/db ./web-backend/app/db

# Copy admin-board requirements and install Python dependencies
COPY admin-board/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy admin-board application code
COPY admin-board/ .

# Create non-root user for security
RUN useradd -m -u 1000 appuser && \
    chown -R appuser:appuser /app

# Switch to non-root user
USER appuser

# Expose Streamlit default port
EXPOSE 8501

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8501/_stcore/health || exit 1

# Run Streamlit application
CMD ["streamlit", "run", "streamlit_app.py", "--server.port=8501", "--server.address=0.0.0.0"]
